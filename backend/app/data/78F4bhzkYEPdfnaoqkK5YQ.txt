React State for Beginners<div><div>
 <p>One of the most essential concepts that any modern JavaScript developer needs to understand is state.</p>
<p>If you don't understand state, you're not going to be able to fully use and take advantage of powerful libraries such as React to build your applications.</p>
<p>Let's see exactly what state is, how it already exists in your JavaScript applications now, and how React allows us to much more easily manage it with built-in hooks like <code>useState</code>.</p>
<p><strong>What is state?</strong></p>
<p>Something that may surprise you is that any website or application you build with plain JavaScript already involves state. It's just not obvious where it lives.</p>
<p>Here is a basic example:</p>
<p>Let's say that we're building a counter application with JavaScript. We want this application to be able to display the current count as well as increase and decrease the count by one.</p>
<p>It will consist of just the current count as well as a button to increase the count by one and another to decrease the count by one.</p>
<p>This is what the final version of our app will look like:</p>
<p><a href="https://res.cloudinary.com/practicaldev/image/fetch/s--1xXoD_FX--/c_limit%2Cf_auto%2Cfl_progressive%2Cq_66%2Cw_880/https://dev-to-uploads.s3.amazonaws.com/uploads/articles/7recumd7fbphfbillyin.gif"></a><br />
Here is the starting markup for our application:<br />
</p>
<div>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;title&gt;Counter App&lt;/title&gt;
 &lt;meta charset="UTF-8" /&gt;
 &lt;/head&gt;
 &lt;body&gt;
 &lt;div&gt;
 &lt;button&gt;+ 1&lt;/button&gt;
 &lt;span&gt;0&lt;/span&gt;
 &lt;button&gt;- 1&lt;/button&gt;
 &lt;/div&gt;
 &lt;/body&gt;
&lt;/html&gt;
</code></pre>
<div>
<p>
 Enter fullscreen mode
 
 Exit fullscreen mode
 
</p>
</div>
</div>
<p>Simply put, <strong>state is data that we need to manage over time within our application</strong>.</p>
<p>State is often changed through user input and that is the case within our application here.</p>
<p>What is the state in our counter app? It is the count number.</p>
<p>Our user can increase or decrease the state value by clicking on the appropriate button. What's important is that we want to display those changes to our user.</p>
<p><strong>Problems with state in plain JavaScript</strong></p>
<p>While state seems like a simple concept, there are two problems with managing it when you use plain JavaScript alone:</p>
<p>1 It is not obvious what the state is or where it lives.</p>
<p>2 Reading and updating the state is an unnatural and often <br />
 repetitive process when using native browser APIs like <br />
 document.<br />
How would we go about updating our count state when our user clicks on either button?</p>
<p>We first need to get a reference to each element. To do this in plain JavaScript, it is common practice to add a unique <code>id</code> attribute to each element, select each element in JavaScript with the <code>document.querySelector</code> method, and store the reference in a local variable:<br />
</p>
<div>
<pre><code>&lt;!DOCTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
 &lt;title&gt;Counter App&lt;/title&gt;
 &lt;meta chars